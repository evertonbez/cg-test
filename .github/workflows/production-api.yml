name: Api Deploy

on:
  push:
    branches: [main]
    paths:
      - "apps/api/**"
      - "packages/**"
      - ".github/workflows/production-api.yml"

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-api

jobs:
  deploy:
    runs-on: tenki-standard-autoscale

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 24
          cache: "pnpm"

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Gera build context via turbo
      - name: Prune workspace (Turborepo)
        run: pnpm dlx turbo prune @cograde/api --docker

      # Copia os outputs pro build context
      - name: Prepare Docker context
        run: |
          mkdir -p ./docker-context
          cp -R ./out/json ./docker-context/json
          cp -R ./out/full ./docker-context/full
          cp apps/api/Dockerfile ./docker-context/

      # Build da imagem Docker
      - name: Build Docker image
        run: |
          docker build \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            -f docker-context/Dockerfile \
            docker-context

      # Push da imagem pro GHCR
      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
